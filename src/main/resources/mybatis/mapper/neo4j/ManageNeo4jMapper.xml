<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.redline.ecoredlinekgback.mapper.neo4j.ManageNeo4jMapper">
<!--    <resultMap id="neoResult" type="com.redline.ecoredlinekgback.pojo.NeoNode">-->
<!--        <result column="id" property="id" javaType="java.lang.String"/>-->
<!--        <result column="born" property="born" javaType="java.lang.Integer"/>-->
<!--        <result column="name" property="name" javaType="java.lang.String"/>-->
<!--        <collection property="labels" ofType="java.lang.String" javaType="java.util.List">-->
<!--            <result column="labels"></result>-->
<!--        </collection>-->
<!--    </resultMap>-->

    <select id="getNodesNum" resultType="java.lang.Integer">
        match (n)
        <if test="name != null">
            where n.name contains #{name} or n.description contains #{name}
        </if>
        return count(n)
    </select>
    <select id="getNodes" resultType="com.redline.ecoredlinekgback.pojo.Node">
        match(n)
        <if test="name != null">
            where n.name contains #{name} or n.description contains #{name}
        </if>
        return id(n) as id,n.description as description,n.name as `name`,n.img_url as imgUrl
        skip #{from}
        limit #{size}
    </select>
</mapper>